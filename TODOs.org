
* TODO ~Evaluatable~ type-hierarchy.                               :REFACTOR:
  - <2017-01-02 Mon>
    * Simplify ~typing~ signatures.

* TODO JSON Ser/DeSer?                                                  :ADV:
  - <2016-12-27 Tue>
    - https://github.com/antidot/Pyckson
      - (I guess) Jackson-clone.
      - Seems nice fit to PoC's objective. (because, it will rewritten
        in Java later).

* TODO docstrings on test functions.                          :DOCUMENTATION:
  - <2016-12-29 Thu>

* TODO JSONSchema-based validation of expressions?                      :ADV:
  - <2016-12-30 Fri>

* TODO Semantical Static Analysis?                                      :ADV:
  - <2016-12-30 Fri>

* TODO eq, ne for func-literals? builtin-ops                            :ADV:
  - <2016-12-28 Wed> almost everything!

    
* TODO docstring-field for func-val, func-val-params.                   :ADV:
  - <2016-12-29 Thu>

* TODO annots for func-val-params?                                      :ADV:
  - <2016-12-29 Thu> arities(if it is a function-param)...

* TODO ~Comments~-fields on everywhere?                                 :ADV:
  - <2016-12-27 Tue> Every node should be able to have a comment.

* TODO Update the README.                                     :DOCUMENTATION:
  - <2016-12-28 Wed>
    1) Separate contents by sections.

* DONE Q. ParamVals for MappedFunction?
  - <2016-12-30 Fri> with that, it would be more descriptive.


* DONE CaseItem, CondItem, FunctionParamVal .. is not a evaluatable-nodes.
  - <2016-12-30 Fri> Hence, change the type.
    - not with ~FunctionParamVal~, these have own evaluator. (it is a expr.)
* DONE Apply Python ~typing~ signatures on funcs?                  :REFACTOR:
  - <2016-12-30 Fri>


* DONE Arrange packages (nodes, builtin-ops, evaluators)           :REFACTOR:
  - <2016-12-28 Wed>

* DONE Rename Plus/Minus -> Add/Sub.                               :REFACTOR:
  - <2016-12-30 Fri>

* DONE No-wrap/unwrap mapped-funcs?                                   :BASIC:
  - <2016-12-30 Fri>

* DONE Max-Stack-Depth as a script? (not a testcase)               :REFACTOR:
  - <2016-12-30 Fri>

* DONE Fix the bug of `test_func_composition`.                        :DEBUG:
  - <2016-12-29 Thu>

* DONE let-bindings?                                                    :ADV:
  - <2016-12-28 Wed>
    1. support upvar, global, const?
    2. depend each binding, DAC-graph.
    3. ..is it should be in primitives? or just implement with
       mapped-func?
* DONE const?                                                           :ADV:
  - <2016-12-27 Tue>
    1. should ~Binding~ support this?
    2. ..or just implement this with its evaluator?
* DONE mapped-vars and mapped-funcs.                                  :BASIC:
  - <2016-12-28 Wed>

* DONE Byte-code compiler?                                     :COMPILER:ADV:
  - <2016-12-29 Thu> 
    - ..do it in JVM instead of this.
    - because there's no actual bytecode emitter in python3. (only
      `dis` available.)

* DONE simple evaluators per builtin-ops.                             :BASIC:
  - <2016-12-28 Wed>

* DONE a stack needs for ~funcall~?
  - <2016-12-28 Wed>
    - <2016-12-29 Thu> no-need. interpreted within py-stack.

* DONE the /evaluator/.
  - <2016-12-27 Tue>
    - or just use term /interpreter/.
      - because using same term evaluator for a node and nodes is
        confusing.

* DONE storing function defs?
  - <2016-12-28 Wed>
    1) in binding?
    2) as an object-tree?

* DONE Add some ~__repr__~ to nodes.
  - <2016-12-28 Wed> for debugging.
* DONE exchange ~/~ and ~//~ ops in READMEs.
  - <2016-12-28 Wed> Just like in Python.
* DONE ~__eq__~ methods for some literal-nodes?
  - <2016-12-28 Wed>
* DONE remove doctest.
  - <2016-12-28 Wed> just use doctests as docstrings.
* DONE pytest for elpy-test-runner.
  - <2016-12-28 Wed>
    -
      http://projectile.readthedocs.io/en/latest/configuration/#customizing-project-root-files

